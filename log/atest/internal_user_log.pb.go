// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal_user_log.proto

package internal_user_log

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserType int32

const (
	UserType_GOOGLE   UserType = 0
	UserType_EXTERNAL UserType = 1
)

var UserType_name = map[int32]string{
	0: "GOOGLE",
	1: "EXTERNAL",
}

var UserType_value = map[string]int32{
	"GOOGLE":   0,
	"EXTERNAL": 1,
}

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (x *UserType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserType_value, data, "UserType")
	if err != nil {
		return err
	}
	*x = UserType(value)
	return nil
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0}
}

// Proto used by Atest CLI Tool for Internal PII Users
type AtestLogEventInternal struct {
	// ------------------------
	// FIELDS FOR ATESTLOGEVENT
	// ------------------------
	// user_key and run_id are both python uuid.uuid4() completely anonymous
	// and random hexadecimal strings. We cannot use normal google ids
	// (zwieback, gaia, etc) because we are an open source command line tool.
	// uuid4 provides us a unique key for grouping, which is all we need.
	UserKey     *string   `protobuf:"bytes,1,opt,name=user_key,json=userKey" json:"user_key,omitempty"`
	RunId       *string   `protobuf:"bytes,2,opt,name=run_id,json=runId" json:"run_id,omitempty"`
	UserType    *UserType `protobuf:"varint,3,opt,name=user_type,json=userType,enum=UserType" json:"user_type,omitempty"`
	ToolName    *string   `protobuf:"bytes,10,opt,name=tool_name,json=toolName" json:"tool_name,omitempty"`
	SubToolName *string   `protobuf:"bytes,12,opt,name=sub_tool_name,json=subToolName" json:"sub_tool_name,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*AtestLogEventInternal_AtestStartEvent_
	//	*AtestLogEventInternal_AtestExitEvent_
	//	*AtestLogEventInternal_FindTestFinishEvent_
	//	*AtestLogEventInternal_BuildFinishEvent_
	//	*AtestLogEventInternal_RunnerFinishEvent_
	//	*AtestLogEventInternal_RunTestsFinishEvent_
	//	*AtestLogEventInternal_LocalDetectEvent_
	Event                isAtestLogEventInternal_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AtestLogEventInternal) Reset()         { *m = AtestLogEventInternal{} }
func (m *AtestLogEventInternal) String() string { return proto.CompactTextString(m) }
func (*AtestLogEventInternal) ProtoMessage()    {}
func (*AtestLogEventInternal) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0}
}

func (m *AtestLogEventInternal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal.Unmarshal(m, b)
}
func (m *AtestLogEventInternal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal.Merge(m, src)
}
func (m *AtestLogEventInternal) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal.Size(m)
}
func (m *AtestLogEventInternal) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal proto.InternalMessageInfo

func (m *AtestLogEventInternal) GetUserKey() string {
	if m != nil && m.UserKey != nil {
		return *m.UserKey
	}
	return ""
}

func (m *AtestLogEventInternal) GetRunId() string {
	if m != nil && m.RunId != nil {
		return *m.RunId
	}
	return ""
}

func (m *AtestLogEventInternal) GetUserType() UserType {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return UserType_GOOGLE
}

func (m *AtestLogEventInternal) GetToolName() string {
	if m != nil && m.ToolName != nil {
		return *m.ToolName
	}
	return ""
}

func (m *AtestLogEventInternal) GetSubToolName() string {
	if m != nil && m.SubToolName != nil {
		return *m.SubToolName
	}
	return ""
}

type isAtestLogEventInternal_Event interface {
	isAtestLogEventInternal_Event()
}

type AtestLogEventInternal_AtestStartEvent_ struct {
	AtestStartEvent *AtestLogEventInternal_AtestStartEvent `protobuf:"bytes,4,opt,name=atest_start_event,json=atestStartEvent,oneof"`
}

type AtestLogEventInternal_AtestExitEvent_ struct {
	AtestExitEvent *AtestLogEventInternal_AtestExitEvent `protobuf:"bytes,5,opt,name=atest_exit_event,json=atestExitEvent,oneof"`
}

type AtestLogEventInternal_FindTestFinishEvent_ struct {
	FindTestFinishEvent *AtestLogEventInternal_FindTestFinishEvent `protobuf:"bytes,6,opt,name=find_test_finish_event,json=findTestFinishEvent,oneof"`
}

type AtestLogEventInternal_BuildFinishEvent_ struct {
	BuildFinishEvent *AtestLogEventInternal_BuildFinishEvent `protobuf:"bytes,7,opt,name=build_finish_event,json=buildFinishEvent,oneof"`
}

type AtestLogEventInternal_RunnerFinishEvent_ struct {
	RunnerFinishEvent *AtestLogEventInternal_RunnerFinishEvent `protobuf:"bytes,8,opt,name=runner_finish_event,json=runnerFinishEvent,oneof"`
}

type AtestLogEventInternal_RunTestsFinishEvent_ struct {
	RunTestsFinishEvent *AtestLogEventInternal_RunTestsFinishEvent `protobuf:"bytes,9,opt,name=run_tests_finish_event,json=runTestsFinishEvent,oneof"`
}

type AtestLogEventInternal_LocalDetectEvent_ struct {
	LocalDetectEvent *AtestLogEventInternal_LocalDetectEvent `protobuf:"bytes,11,opt,name=local_detect_event,json=localDetectEvent,oneof"`
}

func (*AtestLogEventInternal_AtestStartEvent_) isAtestLogEventInternal_Event() {}

func (*AtestLogEventInternal_AtestExitEvent_) isAtestLogEventInternal_Event() {}

func (*AtestLogEventInternal_FindTestFinishEvent_) isAtestLogEventInternal_Event() {}

func (*AtestLogEventInternal_BuildFinishEvent_) isAtestLogEventInternal_Event() {}

func (*AtestLogEventInternal_RunnerFinishEvent_) isAtestLogEventInternal_Event() {}

func (*AtestLogEventInternal_RunTestsFinishEvent_) isAtestLogEventInternal_Event() {}

func (*AtestLogEventInternal_LocalDetectEvent_) isAtestLogEventInternal_Event() {}

func (m *AtestLogEventInternal) GetEvent() isAtestLogEventInternal_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *AtestLogEventInternal) GetAtestStartEvent() *AtestLogEventInternal_AtestStartEvent {
	if x, ok := m.GetEvent().(*AtestLogEventInternal_AtestStartEvent_); ok {
		return x.AtestStartEvent
	}
	return nil
}

func (m *AtestLogEventInternal) GetAtestExitEvent() *AtestLogEventInternal_AtestExitEvent {
	if x, ok := m.GetEvent().(*AtestLogEventInternal_AtestExitEvent_); ok {
		return x.AtestExitEvent
	}
	return nil
}

func (m *AtestLogEventInternal) GetFindTestFinishEvent() *AtestLogEventInternal_FindTestFinishEvent {
	if x, ok := m.GetEvent().(*AtestLogEventInternal_FindTestFinishEvent_); ok {
		return x.FindTestFinishEvent
	}
	return nil
}

func (m *AtestLogEventInternal) GetBuildFinishEvent() *AtestLogEventInternal_BuildFinishEvent {
	if x, ok := m.GetEvent().(*AtestLogEventInternal_BuildFinishEvent_); ok {
		return x.BuildFinishEvent
	}
	return nil
}

func (m *AtestLogEventInternal) GetRunnerFinishEvent() *AtestLogEventInternal_RunnerFinishEvent {
	if x, ok := m.GetEvent().(*AtestLogEventInternal_RunnerFinishEvent_); ok {
		return x.RunnerFinishEvent
	}
	return nil
}

func (m *AtestLogEventInternal) GetRunTestsFinishEvent() *AtestLogEventInternal_RunTestsFinishEvent {
	if x, ok := m.GetEvent().(*AtestLogEventInternal_RunTestsFinishEvent_); ok {
		return x.RunTestsFinishEvent
	}
	return nil
}

func (m *AtestLogEventInternal) GetLocalDetectEvent() *AtestLogEventInternal_LocalDetectEvent {
	if x, ok := m.GetEvent().(*AtestLogEventInternal_LocalDetectEvent_); ok {
		return x.LocalDetectEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AtestLogEventInternal) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AtestLogEventInternal_AtestStartEvent_)(nil),
		(*AtestLogEventInternal_AtestExitEvent_)(nil),
		(*AtestLogEventInternal_FindTestFinishEvent_)(nil),
		(*AtestLogEventInternal_BuildFinishEvent_)(nil),
		(*AtestLogEventInternal_RunnerFinishEvent_)(nil),
		(*AtestLogEventInternal_RunTestsFinishEvent_)(nil),
		(*AtestLogEventInternal_LocalDetectEvent_)(nil),
	}
}

// ------------------------
// EVENT DEFINITIONS
// ------------------------
// Occurs immediately upon execution of atest
type AtestLogEventInternal_AtestStartEvent struct {
	CommandLine          *string  `protobuf:"bytes,1,opt,name=command_line,json=commandLine" json:"command_line,omitempty"`
	TestReferences       []string `protobuf:"bytes,2,rep,name=test_references,json=testReferences" json:"test_references,omitempty"`
	Cwd                  *string  `protobuf:"bytes,3,opt,name=cwd" json:"cwd,omitempty"`
	Os                   *string  `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AtestLogEventInternal_AtestStartEvent) Reset()         { *m = AtestLogEventInternal_AtestStartEvent{} }
func (m *AtestLogEventInternal_AtestStartEvent) String() string { return proto.CompactTextString(m) }
func (*AtestLogEventInternal_AtestStartEvent) ProtoMessage()    {}
func (*AtestLogEventInternal_AtestStartEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 0}
}

func (m *AtestLogEventInternal_AtestStartEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_AtestStartEvent.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_AtestStartEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_AtestStartEvent.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_AtestStartEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_AtestStartEvent.Merge(m, src)
}
func (m *AtestLogEventInternal_AtestStartEvent) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_AtestStartEvent.Size(m)
}
func (m *AtestLogEventInternal_AtestStartEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_AtestStartEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_AtestStartEvent proto.InternalMessageInfo

func (m *AtestLogEventInternal_AtestStartEvent) GetCommandLine() string {
	if m != nil && m.CommandLine != nil {
		return *m.CommandLine
	}
	return ""
}

func (m *AtestLogEventInternal_AtestStartEvent) GetTestReferences() []string {
	if m != nil {
		return m.TestReferences
	}
	return nil
}

func (m *AtestLogEventInternal_AtestStartEvent) GetCwd() string {
	if m != nil && m.Cwd != nil {
		return *m.Cwd
	}
	return ""
}

func (m *AtestLogEventInternal_AtestStartEvent) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

// Occurs when atest exits for any reason
type AtestLogEventInternal_AtestExitEvent struct {
	Duration             *durationpb.Duration `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	ExitCode             *int32               `protobuf:"varint,2,opt,name=exit_code,json=exitCode" json:"exit_code,omitempty"`
	Stacktrace           *string              `protobuf:"bytes,3,opt,name=stacktrace" json:"stacktrace,omitempty"`
	Logs                 *string              `protobuf:"bytes,4,opt,name=logs" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AtestLogEventInternal_AtestExitEvent) Reset()         { *m = AtestLogEventInternal_AtestExitEvent{} }
func (m *AtestLogEventInternal_AtestExitEvent) String() string { return proto.CompactTextString(m) }
func (*AtestLogEventInternal_AtestExitEvent) ProtoMessage()    {}
func (*AtestLogEventInternal_AtestExitEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 1}
}

func (m *AtestLogEventInternal_AtestExitEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_AtestExitEvent.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_AtestExitEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_AtestExitEvent.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_AtestExitEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_AtestExitEvent.Merge(m, src)
}
func (m *AtestLogEventInternal_AtestExitEvent) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_AtestExitEvent.Size(m)
}
func (m *AtestLogEventInternal_AtestExitEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_AtestExitEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_AtestExitEvent proto.InternalMessageInfo

func (m *AtestLogEventInternal_AtestExitEvent) GetDuration() *durationpb.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *AtestLogEventInternal_AtestExitEvent) GetExitCode() int32 {
	if m != nil && m.ExitCode != nil {
		return *m.ExitCode
	}
	return 0
}

func (m *AtestLogEventInternal_AtestExitEvent) GetStacktrace() string {
	if m != nil && m.Stacktrace != nil {
		return *m.Stacktrace
	}
	return ""
}

func (m *AtestLogEventInternal_AtestExitEvent) GetLogs() string {
	if m != nil && m.Logs != nil {
		return *m.Logs
	}
	return ""
}

// Occurs after a SINGLE test reference has been resolved to a test or
// not found
type AtestLogEventInternal_FindTestFinishEvent struct {
	Duration             *durationpb.Duration `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	Success              *bool                `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	TestReference        *string              `protobuf:"bytes,3,opt,name=test_reference,json=testReference" json:"test_reference,omitempty"`
	TestFinders          []string             `protobuf:"bytes,4,rep,name=test_finders,json=testFinders" json:"test_finders,omitempty"`
	TestInfo             *string              `protobuf:"bytes,5,opt,name=test_info,json=testInfo" json:"test_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AtestLogEventInternal_FindTestFinishEvent) Reset() {
	*m = AtestLogEventInternal_FindTestFinishEvent{}
}
func (m *AtestLogEventInternal_FindTestFinishEvent) String() string {
	return proto.CompactTextString(m)
}
func (*AtestLogEventInternal_FindTestFinishEvent) ProtoMessage() {}
func (*AtestLogEventInternal_FindTestFinishEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 2}
}

func (m *AtestLogEventInternal_FindTestFinishEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_FindTestFinishEvent.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_FindTestFinishEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_FindTestFinishEvent.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_FindTestFinishEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_FindTestFinishEvent.Merge(m, src)
}
func (m *AtestLogEventInternal_FindTestFinishEvent) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_FindTestFinishEvent.Size(m)
}
func (m *AtestLogEventInternal_FindTestFinishEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_FindTestFinishEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_FindTestFinishEvent proto.InternalMessageInfo

func (m *AtestLogEventInternal_FindTestFinishEvent) GetDuration() *durationpb.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *AtestLogEventInternal_FindTestFinishEvent) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *AtestLogEventInternal_FindTestFinishEvent) GetTestReference() string {
	if m != nil && m.TestReference != nil {
		return *m.TestReference
	}
	return ""
}

func (m *AtestLogEventInternal_FindTestFinishEvent) GetTestFinders() []string {
	if m != nil {
		return m.TestFinders
	}
	return nil
}

func (m *AtestLogEventInternal_FindTestFinishEvent) GetTestInfo() string {
	if m != nil && m.TestInfo != nil {
		return *m.TestInfo
	}
	return ""
}

// Occurs after the build finishes, either successfully or not.
type AtestLogEventInternal_BuildFinishEvent struct {
	Duration             *durationpb.Duration `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	Success              *bool                `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	Targets              []string             `protobuf:"bytes,3,rep,name=targets" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AtestLogEventInternal_BuildFinishEvent) Reset() {
	*m = AtestLogEventInternal_BuildFinishEvent{}
}
func (m *AtestLogEventInternal_BuildFinishEvent) String() string { return proto.CompactTextString(m) }
func (*AtestLogEventInternal_BuildFinishEvent) ProtoMessage()    {}
func (*AtestLogEventInternal_BuildFinishEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 3}
}

func (m *AtestLogEventInternal_BuildFinishEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_BuildFinishEvent.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_BuildFinishEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_BuildFinishEvent.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_BuildFinishEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_BuildFinishEvent.Merge(m, src)
}
func (m *AtestLogEventInternal_BuildFinishEvent) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_BuildFinishEvent.Size(m)
}
func (m *AtestLogEventInternal_BuildFinishEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_BuildFinishEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_BuildFinishEvent proto.InternalMessageInfo

func (m *AtestLogEventInternal_BuildFinishEvent) GetDuration() *durationpb.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *AtestLogEventInternal_BuildFinishEvent) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *AtestLogEventInternal_BuildFinishEvent) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

// Occurs when a single test runner has completed
type AtestLogEventInternal_RunnerFinishEvent struct {
	Duration             *durationpb.Duration                            `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	Success              *bool                                           `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	RunnerName           *string                                         `protobuf:"bytes,3,opt,name=runner_name,json=runnerName" json:"runner_name,omitempty"`
	Test                 []*AtestLogEventInternal_RunnerFinishEvent_Test `protobuf:"bytes,4,rep,name=test" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *AtestLogEventInternal_RunnerFinishEvent) Reset() {
	*m = AtestLogEventInternal_RunnerFinishEvent{}
}
func (m *AtestLogEventInternal_RunnerFinishEvent) String() string { return proto.CompactTextString(m) }
func (*AtestLogEventInternal_RunnerFinishEvent) ProtoMessage()    {}
func (*AtestLogEventInternal_RunnerFinishEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 4}
}

func (m *AtestLogEventInternal_RunnerFinishEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_RunnerFinishEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_RunnerFinishEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent.Merge(m, src)
}
func (m *AtestLogEventInternal_RunnerFinishEvent) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent.Size(m)
}
func (m *AtestLogEventInternal_RunnerFinishEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent proto.InternalMessageInfo

func (m *AtestLogEventInternal_RunnerFinishEvent) GetDuration() *durationpb.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *AtestLogEventInternal_RunnerFinishEvent) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *AtestLogEventInternal_RunnerFinishEvent) GetRunnerName() string {
	if m != nil && m.RunnerName != nil {
		return *m.RunnerName
	}
	return ""
}

func (m *AtestLogEventInternal_RunnerFinishEvent) GetTest() []*AtestLogEventInternal_RunnerFinishEvent_Test {
	if m != nil {
		return m.Test
	}
	return nil
}

type AtestLogEventInternal_RunnerFinishEvent_Test struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Result               *int32   `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	Stacktrace           *string  `protobuf:"bytes,3,opt,name=stacktrace" json:"stacktrace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AtestLogEventInternal_RunnerFinishEvent_Test) Reset() {
	*m = AtestLogEventInternal_RunnerFinishEvent_Test{}
}
func (m *AtestLogEventInternal_RunnerFinishEvent_Test) String() string {
	return proto.CompactTextString(m)
}
func (*AtestLogEventInternal_RunnerFinishEvent_Test) ProtoMessage() {}
func (*AtestLogEventInternal_RunnerFinishEvent_Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 4, 0}
}

func (m *AtestLogEventInternal_RunnerFinishEvent_Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent_Test.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_RunnerFinishEvent_Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent_Test.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_RunnerFinishEvent_Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent_Test.Merge(m, src)
}
func (m *AtestLogEventInternal_RunnerFinishEvent_Test) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent_Test.Size(m)
}
func (m *AtestLogEventInternal_RunnerFinishEvent_Test) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent_Test.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_RunnerFinishEvent_Test proto.InternalMessageInfo

func (m *AtestLogEventInternal_RunnerFinishEvent_Test) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AtestLogEventInternal_RunnerFinishEvent_Test) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *AtestLogEventInternal_RunnerFinishEvent_Test) GetStacktrace() string {
	if m != nil && m.Stacktrace != nil {
		return *m.Stacktrace
	}
	return ""
}

// Occurs after all test runners and tests have finished
type AtestLogEventInternal_RunTestsFinishEvent struct {
	Duration             *durationpb.Duration `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AtestLogEventInternal_RunTestsFinishEvent) Reset() {
	*m = AtestLogEventInternal_RunTestsFinishEvent{}
}
func (m *AtestLogEventInternal_RunTestsFinishEvent) String() string {
	return proto.CompactTextString(m)
}
func (*AtestLogEventInternal_RunTestsFinishEvent) ProtoMessage() {}
func (*AtestLogEventInternal_RunTestsFinishEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 5}
}

func (m *AtestLogEventInternal_RunTestsFinishEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_RunTestsFinishEvent.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_RunTestsFinishEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_RunTestsFinishEvent.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_RunTestsFinishEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_RunTestsFinishEvent.Merge(m, src)
}
func (m *AtestLogEventInternal_RunTestsFinishEvent) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_RunTestsFinishEvent.Size(m)
}
func (m *AtestLogEventInternal_RunTestsFinishEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_RunTestsFinishEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_RunTestsFinishEvent proto.InternalMessageInfo

func (m *AtestLogEventInternal_RunTestsFinishEvent) GetDuration() *durationpb.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

// Occurs after detection of catching bug by atest have finished
type AtestLogEventInternal_LocalDetectEvent struct {
	DetectType           *int32   `protobuf:"varint,1,opt,name=detect_type,json=detectType" json:"detect_type,omitempty"`
	Result               *int32   `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AtestLogEventInternal_LocalDetectEvent) Reset() {
	*m = AtestLogEventInternal_LocalDetectEvent{}
}
func (m *AtestLogEventInternal_LocalDetectEvent) String() string { return proto.CompactTextString(m) }
func (*AtestLogEventInternal_LocalDetectEvent) ProtoMessage()    {}
func (*AtestLogEventInternal_LocalDetectEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_36532fe67711fe38, []int{0, 6}
}

func (m *AtestLogEventInternal_LocalDetectEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtestLogEventInternal_LocalDetectEvent.Unmarshal(m, b)
}
func (m *AtestLogEventInternal_LocalDetectEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtestLogEventInternal_LocalDetectEvent.Marshal(b, m, deterministic)
}
func (m *AtestLogEventInternal_LocalDetectEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtestLogEventInternal_LocalDetectEvent.Merge(m, src)
}
func (m *AtestLogEventInternal_LocalDetectEvent) XXX_Size() int {
	return xxx_messageInfo_AtestLogEventInternal_LocalDetectEvent.Size(m)
}
func (m *AtestLogEventInternal_LocalDetectEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AtestLogEventInternal_LocalDetectEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AtestLogEventInternal_LocalDetectEvent proto.InternalMessageInfo

func (m *AtestLogEventInternal_LocalDetectEvent) GetDetectType() int32 {
	if m != nil && m.DetectType != nil {
		return *m.DetectType
	}
	return 0
}

func (m *AtestLogEventInternal_LocalDetectEvent) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func init() {
	proto.RegisterEnum("UserType", UserType_name, UserType_value)
	proto.RegisterType((*AtestLogEventInternal)(nil), "AtestLogEventInternal")
	proto.RegisterType((*AtestLogEventInternal_AtestStartEvent)(nil), "AtestLogEventInternal.AtestStartEvent")
	proto.RegisterType((*AtestLogEventInternal_AtestExitEvent)(nil), "AtestLogEventInternal.AtestExitEvent")
	proto.RegisterType((*AtestLogEventInternal_FindTestFinishEvent)(nil), "AtestLogEventInternal.FindTestFinishEvent")
	proto.RegisterType((*AtestLogEventInternal_BuildFinishEvent)(nil), "AtestLogEventInternal.BuildFinishEvent")
	proto.RegisterType((*AtestLogEventInternal_RunnerFinishEvent)(nil), "AtestLogEventInternal.RunnerFinishEvent")
	proto.RegisterType((*AtestLogEventInternal_RunnerFinishEvent_Test)(nil), "AtestLogEventInternal.RunnerFinishEvent.Test")
	proto.RegisterType((*AtestLogEventInternal_RunTestsFinishEvent)(nil), "AtestLogEventInternal.RunTestsFinishEvent")
	proto.RegisterType((*AtestLogEventInternal_LocalDetectEvent)(nil), "AtestLogEventInternal.LocalDetectEvent")
}

func init() {
	proto.RegisterFile("internal_user_log.proto", fileDescriptor_36532fe67711fe38)
}

var fileDescriptor_36532fe67711fe38 = []byte{
	// 773 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xed, 0x6e, 0xe3, 0x44,
	0x14, 0x5d, 0xe7, 0xd3, 0xbe, 0xee, 0xa6, 0xe9, 0x44, 0xbb, 0x78, 0x8d, 0xb4, 0x84, 0x15, 0xbb,
	0x1b, 0xad, 0x44, 0x56, 0x8a, 0xc4, 0x03, 0x74, 0xd9, 0x6c, 0xa9, 0x1a, 0xb5, 0xc2, 0x04, 0x81,
	0xf8, 0x63, 0x39, 0xf6, 0x4d, 0xb0, 0xea, 0xcc, 0x54, 0x33, 0x63, 0x68, 0x7e, 0x20, 0x5e, 0x83,
	0x1f, 0xbc, 0x12, 0x8f, 0xc0, 0xbb, 0xa0, 0xb9, 0xb6, 0x03, 0x4e, 0x9b, 0xb2, 0xaa, 0xfa, 0x6f,
	0xe6, 0xf8, 0xce, 0xf1, 0xf1, 0xf1, 0x3d, 0x77, 0xe0, 0x93, 0x94, 0x6b, 0x94, 0x3c, 0xca, 0xc2,
	0x5c, 0xa1, 0x0c, 0x33, 0xb1, 0x1a, 0x5f, 0x49, 0xa1, 0x85, 0xff, 0x7c, 0x25, 0xc4, 0x2a, 0xc3,
	0xb7, 0xb4, 0x5b, 0xe4, 0xcb, 0xb7, 0x49, 0x2e, 0x23, 0x9d, 0x0a, 0x5e, 0x3c, 0x7f, 0xf1, 0x77,
	0x0f, 0x9e, 0x1c, 0x6b, 0x54, 0x7a, 0x26, 0x56, 0xd3, 0x5f, 0x90, 0xeb, 0xd3, 0x92, 0x88, 0x3d,
	0x03, 0x9b, 0xb8, 0x2e, 0x71, 0xe3, 0x59, 0x43, 0x6b, 0xe4, 0x04, 0x5d, 0xb3, 0x3f, 0xc3, 0x0d,
	0x7b, 0x02, 0x1d, 0x99, 0xf3, 0x30, 0x4d, 0xbc, 0x06, 0x3d, 0x68, 0xcb, 0x9c, 0x9f, 0x26, 0xec,
	0x15, 0x38, 0x74, 0x42, 0x6f, 0xae, 0xd0, 0x6b, 0x0e, 0xad, 0x51, 0x6f, 0xe2, 0x8c, 0xbf, 0x57,
	0x28, 0xe7, 0x9b, 0x2b, 0x0c, 0x88, 0xcd, 0xac, 0xd8, 0xa7, 0xe0, 0x68, 0x21, 0xb2, 0x90, 0x47,
	0x6b, 0xf4, 0x80, 0x18, 0x6c, 0x03, 0x9c, 0x47, 0x6b, 0x64, 0x2f, 0xe0, 0xb1, 0xca, 0x17, 0xe1,
	0xbf, 0x05, 0x07, 0x54, 0xe0, 0xaa, 0x7c, 0x31, 0xaf, 0x6a, 0xe6, 0x70, 0x14, 0x19, 0xcd, 0xa1,
	0xd2, 0x91, 0xd4, 0x21, 0x1a, 0xdd, 0x5e, 0x6b, 0x68, 0x8d, 0xdc, 0xc9, 0xab, 0xf1, 0xad, 0x5f,
	0x53, 0xa0, 0xdf, 0x99, 0x72, 0xc2, 0xbf, 0x79, 0x14, 0x1c, 0x46, 0x75, 0x88, 0x7d, 0x0b, 0xfd,
	0x82, 0x15, 0xaf, 0xd3, 0x8a, 0xb4, 0x4d, 0xa4, 0x2f, 0xef, 0x22, 0x9d, 0x5e, 0xa7, 0x5b, 0xce,
	0x5e, 0x54, 0x43, 0x58, 0x04, 0x4f, 0x97, 0x29, 0x4f, 0x42, 0xa2, 0x5d, 0xa6, 0x3c, 0x55, 0x3f,
	0x97, 0xc4, 0x1d, 0x22, 0x7e, 0xb3, 0x87, 0xf8, 0x43, 0xca, 0x93, 0x39, 0x2a, 0xfd, 0x81, 0x8e,
	0x54, 0xec, 0x83, 0xe5, 0x4d, 0x98, 0xfd, 0x00, 0x6c, 0x91, 0xa7, 0x59, 0x52, 0xa7, 0xef, 0x12,
	0xfd, 0xeb, 0x3d, 0xf4, 0xef, 0xcc, 0x81, 0x3a, 0x77, 0x7f, 0xb1, 0x83, 0xb1, 0x9f, 0x60, 0x20,
	0x73, 0xce, 0x51, 0xd6, 0x99, 0x6d, 0x62, 0x1e, 0xed, 0x61, 0x0e, 0xe8, 0x44, 0x9d, 0xfa, 0x48,
	0xee, 0x82, 0xc6, 0x17, 0xd3, 0x40, 0x86, 0x42, 0xd5, 0xe9, 0x9d, 0x3b, 0x7d, 0x09, 0x72, 0x6e,
	0xbe, 0x5f, 0xed, 0xf8, 0x22, 0x6f, 0xc2, 0xc6, 0x97, 0x4c, 0xc4, 0x51, 0x16, 0x26, 0xa8, 0x31,
	0xae, 0xfe, 0xa7, 0x7b, 0xa7, 0x2f, 0x33, 0x73, 0xe0, 0x3d, 0xd5, 0x6f, 0x7d, 0xc9, 0x76, 0x30,
	0xff, 0x77, 0x38, 0xdc, 0x69, 0x26, 0xf6, 0x39, 0x1c, 0xc4, 0x62, 0xbd, 0x8e, 0x78, 0x12, 0x66,
	0x29, 0xc7, 0x32, 0x2e, 0x6e, 0x89, 0xcd, 0x52, 0x8e, 0xec, 0x35, 0x1c, 0x52, 0x13, 0x48, 0x5c,
	0xa2, 0x44, 0x1e, 0xa3, 0xf2, 0x1a, 0xc3, 0xe6, 0xc8, 0x09, 0x7a, 0x06, 0x0e, 0xb6, 0x28, 0xeb,
	0x43, 0x33, 0xfe, 0x35, 0xa1, 0xf8, 0x38, 0x81, 0x59, 0xb2, 0x1e, 0x34, 0x84, 0xa2, 0xf6, 0x76,
	0x82, 0x86, 0x50, 0xfe, 0x1f, 0x16, 0xf4, 0xea, 0x9d, 0xc7, 0xbe, 0x02, 0xbb, 0xca, 0x35, 0xbd,
	0xdc, 0x9d, 0x3c, 0x1b, 0x17, 0xc1, 0x1f, 0x57, 0xc1, 0x1f, 0xbf, 0x2f, 0x0b, 0x82, 0x6d, 0xa9,
	0x09, 0x22, 0xf5, 0x7a, 0x2c, 0x12, 0xa4, 0x28, 0xb7, 0x03, 0xdb, 0x00, 0x5f, 0x8b, 0x04, 0xd9,
	0x73, 0x00, 0xa5, 0xa3, 0xf8, 0x52, 0xcb, 0x28, 0xc6, 0x52, 0xcf, 0x7f, 0x10, 0xc6, 0xa0, 0x95,
	0x89, 0x55, 0x25, 0x8c, 0xd6, 0xfe, 0x5f, 0x16, 0x0c, 0x6e, 0xe9, 0xdd, 0xfb, 0xea, 0xf3, 0xa0,
	0xab, 0xf2, 0x38, 0x46, 0xa5, 0x48, 0x9d, 0x1d, 0x54, 0x5b, 0xf6, 0x12, 0x7a, 0x75, 0x3b, 0x4b,
	0x81, 0x8f, 0x6b, 0x6e, 0x9a, 0x1f, 0x53, 0x45, 0x2f, 0x41, 0x69, 0xb4, 0x1a, 0xcb, 0x5d, 0x5d,
	0xc8, 0x33, 0x10, 0x0d, 0x23, 0x53, 0x92, 0xf2, 0xa5, 0xa0, 0xb8, 0x9b, 0x61, 0x84, 0x4a, 0x9f,
	0xf2, 0xa5, 0xf0, 0x7f, 0x83, 0xfe, 0x6e, 0x56, 0x1e, 0xfe, 0x5b, 0x3c, 0xe8, 0xea, 0x48, 0xae,
	0x50, 0x2b, 0xaf, 0x49, 0xfa, 0xaa, 0xad, 0xff, 0x67, 0x03, 0x8e, 0x6e, 0x24, 0xea, 0xe1, 0x05,
	0x7c, 0x06, 0x6e, 0x99, 0x74, 0x1a, 0xb8, 0xe5, 0xaf, 0x2e, 0x20, 0x9a, 0xb7, 0xc7, 0xd0, 0x32,
	0x96, 0x90, 0x7d, 0xee, 0xe4, 0xcb, 0x8f, 0xcd, 0xfe, 0xd8, 0xb4, 0x41, 0x40, 0x47, 0xfd, 0x00,
	0x5a, 0x66, 0x67, 0xba, 0x86, 0x5e, 0x52, 0x44, 0x84, 0xd6, 0xec, 0x29, 0x74, 0x24, 0xaa, 0x3c,
	0xd3, 0x65, 0x0f, 0x96, 0xbb, 0xff, 0xeb, 0x40, 0x7f, 0x06, 0x83, 0x5b, 0x06, 0xc2, 0x3d, 0xfd,
	0xf1, 0xcf, 0xa0, 0xbf, 0x9b, 0x7f, 0xe3, 0x4c, 0x39, 0x3e, 0xe8, 0x4e, 0xb3, 0x48, 0x1e, 0x14,
	0x10, 0x5d, 0x65, 0x7b, 0xa4, 0xbf, 0xeb, 0x42, 0x9b, 0x06, 0xce, 0x9b, 0x2f, 0xc0, 0xae, 0x6e,
	0x40, 0x06, 0xd0, 0x39, 0xb9, 0xb8, 0x38, 0x99, 0x4d, 0xfb, 0x8f, 0xd8, 0x01, 0xd8, 0xd3, 0x1f,
	0xe7, 0xd3, 0xe0, 0xfc, 0x78, 0xd6, 0xb7, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x21, 0x4f, 0x80,
	0xc0, 0xbf, 0x07, 0x00, 0x00,
}
